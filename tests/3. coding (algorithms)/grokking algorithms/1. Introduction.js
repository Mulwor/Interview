// Бинарный поиск - алгоритм поиска элемента в отсортированном массиве. Он делит массив на две части, берет "центральный" элемент, 
// сравнивает его значение с искомым - и на основании этого сравнения отбрасывает одну из двух частей. Таким образом, область по-
// иска каждый раз сокращается вдвое. Важное условие: массив значений должен быть отсортирован.

// Бинарный поиск выполняется за логарифмическое время. Сложность данного алгоритма o(log n), 
// Если мы используем простой поиск (линейный), то нам понадобится 1000 попыток, чтобы найти нужного человека. Сложность О(n)


function binary_search(list, item) {
    let low = 0;
    let high = list.length - 1;                 // Будет равен индексу последнем элементу: -9
  
    while (low <= high) {
      let mid = Math.floor((low + high) / 2);
      let guess = list[mid];
  
      if (guess === item) {
        return mid;
      } else if (guess > item) {
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    }
  
    return undefined;
}

const my_list = [1, 3, 5, 7, 9]; 
console.log(binary_search(my_list, 3));     // 1
console.log(binary_search(my_list, -1));    // null